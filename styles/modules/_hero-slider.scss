.swiper-slide {
    height: 500px;
    overflow: hidden; //transform:scale(1.3);ではみ出た部分をhiddenした。

    & > img {
        width: 100%;
        height: 100%;
        max-width: 100%;
        object-fit: cover; //上下左右親要素と同じ幅高さにした
        transform: scale(1.3); //defalt値
        transition: transform 1.9s ease; //timing functionはease
    }

    &-active {  //検証ツールでみると、画面が表示している写真はswiper-slide-activeとhtmlがなっている。scaleを解除するプロパティを与える
        & > img {
            transform: none;
        }

        & .hero__title {
            opacity: 1;
            transform: translate(-50%, -50%);
        }
    }

    &::after { //afterとすると、swiper-slideのクラスの一番最後に付与される形をとる
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 61, 125, 0.1);
    }
}


.hero{
    padding-top: $navHeight;
    overflow: hidden;
    &__title{
        position: absolute;  //swiper.min.cssにてswiper-wrapperはrelativeを持っている
        top: 50%;
        left: 50%;
        transform: translate(-50%, calc(-50% + 20px)); //calcで20px下にずらすようにした。
        color: $cWhite;
        font-size: 25px;
        z-index: 2;
        opacity: 0;
        transition: opacity 0.3s ease 1s, transform 0.3s ease 1s;
        // オパシティは0.3sかけて。1s間経った後に、アニメーションするように記載
    }

    &__footer{
        position: absolute;
        left: 50%;
        bottom: 20px;
        transform: translateX(-50%);
        z-index: 2;
        height: 68px;
        width: 22px;
        overflow: hidden;
    }

    &__downarrow{
        position: absolute; //hero__footerがstatistic以外なので、footerからの位置
        left: 0;
        bottom: 0;
        width: 6px;  //arrowの横幅
        @include animation($name:kf-arrow-anime, $iteration-count:infinite, $duration:2s, $timing-function:linear); //linearは時間経過によって変化量は変わらない
    }

    &__scrolltext{
        position: absolute;
        transform: rotate(90deg); //90度回転
        color: rgba(255,255,255,0.7);
        left: -8px;
        top: 11px;
        font-size: 1.2em;

    }
}

@keyframes kf-arrow-anime {
    0%,
    50%,
    100% {
        transform: translateY(-10%);
    }
    30% {
        transform: none;
    }

}